(define (domain ferry)
    (:requirements :derived-predicates :existential-preconditions :negative-preconditions :strips :typing)
    (:types car location - object)
    (:predicates (at ?c - car ?l - location)  (at-ferry ?l - location)  (at-ferry_AG ?l - location)  (at-ferry_G ?l - location)  (at-ferry_UG ?l - location)  (at_AG ?c - car ?l - location)  (at_G ?c - car ?l - location)  (at_UG ?c - car ?l - location)  (board_ ?car - car ?loc - location)  (debark_ ?car - car ?loc - location)  (derivable_board) (derivable_debark) (derivable_sail) (empty-ferry) (empty-ferry_AG) (empty-ferry_G) (empty-ferry_UG) (exists_goal_car_at ?L)  (on ?c - car)  (on_AG ?c - car)  (on_G ?c - car)  (on_UG ?c - car)  (sail_ ?from - location ?to - location))
    (:derived (at-ferry_AG ?l - location) (and (at-ferry ?l) (at-ferry_G ?l)))
     (:derived (at-ferry_UG ?l - location) (and (not (at-ferry ?l)) (at-ferry_G ?l)))
     (:derived (at_AG ?c - car ?l - location) (and (at ?c ?l) (at_G ?c ?l)))
     (:derived (at_UG ?c - car ?l - location) (and (not (at ?c ?l)) (at_G ?c ?l)))
     (:derived (board_ ?C - car ?L - location) (exists (?G) (at_UG ?C ?G)))
     (:derived (debark_ ?C - car ?L - location) (at_UG ?C ?L))
     (:derived (derivable_board) (exists (?loc - location ?car - car) (and (at ?car ?loc) (at-ferry ?loc) (empty-ferry) (board_ ?car ?loc))))
     (:derived (derivable_debark) (exists (?loc - location ?car - car) (and (on ?car) (at-ferry ?loc) (debark_ ?car ?loc))))
     (:derived (derivable_sail) (exists (?from - location ?to - location) (and (at-ferry ?from) (not (at-ferry ?to)) (sail_ ?from ?to))))
     (:derived (empty-ferry_AG) (and (empty-ferry) (empty-ferry_G)))
     (:derived (empty-ferry_UG) (and (not (empty-ferry)) (empty-ferry_G)))
     (:derived (exists_goal_car_at ?L) (exists (?G ?C) (and (at_UG ?C ?G) (at ?C ?L))))
     (:derived (on_AG ?c - car) (and (on ?c) (on_G ?c)))
     (:derived (on_UG ?c - car) (and (not (on ?c)) (on_G ?c)))
     (:derived (sail_ ?F - location ?T - location) (exists (?C) (and (at_UG ?C ?T) (on ?C))))
     (:derived (sail_ ?F - location ?T - location) (exists (?G ?C) (and (at_UG ?C ?G) (at ?C ?T) (empty-ferry) (not (exists_goal_car_at ?F)))))
    (:action board
        :parameters (?car - car ?loc - location)
        :precondition (and (at ?car ?loc) (at-ferry ?loc) (empty-ferry) (board_ ?car ?loc))
        :effect (and (on ?car) (not (at ?car ?loc)) (not (empty-ferry)))
    )
     (:action debark
        :parameters (?car - car ?loc - location)
        :precondition (and (on ?car) (at-ferry ?loc) (debark_ ?car ?loc))
        :effect (and (at ?car ?loc) (empty-ferry) (not (on ?car)))
    )
     (:action sail
        :parameters (?from - location ?to - location)
        :precondition (and (at-ferry ?from) (not (at-ferry ?to)) (sail_ ?from ?to))
        :effect (and (at-ferry ?to) (not (at-ferry ?from)))
    )
)