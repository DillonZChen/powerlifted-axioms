(define (domain blocksworld)
    (:requirements :derived-predicates :existential-preconditions :negative-preconditions :strips :typing)
    (:predicates (arm_empty) (arm_empty_AG) (arm_empty_G) (arm_empty_UG) (clear ?x)  (clear_AG ?x)  (clear_G ?x)  (clear_UG ?x)  (derivable_pickup) (derivable_putdown) (derivable_stack) (derivable_unstack) (holding ?x)  (holding_AG ?x)  (holding_G ?x)  (holding_UG ?x)  (on ?x ?y)  (on_AG ?x ?y)  (on_G ?x ?y)  (on_UG ?x ?y)  (on_table ?x)  (on_table_AG ?x)  (on_table_G ?x)  (on_table_UG ?x)  (pickup_ ?ob)  (putdown_ ?ob)  (stack_ ?ob ?underob)  (unstack_ ?ob ?underob)  (well_placed ?A))
    (:derived (arm_empty_AG) (and (arm_empty) (arm_empty_G)))
     (:derived (arm_empty_UG) (and (not (arm_empty)) (arm_empty_G)))
     (:derived (clear_AG ?x) (and (clear ?x) (clear_G ?x)))
     (:derived (clear_UG ?x) (and (not (clear ?x)) (clear_G ?x)))
     (:derived (derivable_pickup) (exists (?ob) (and (clear ?ob) (on_table ?ob) (arm_empty) (pickup_ ?ob))))
     (:derived (derivable_putdown) (exists (?ob) (and (holding ?ob) (putdown_ ?ob))))
     (:derived (derivable_stack) (exists (?underob ?ob) (and (clear ?underob) (holding ?ob) (stack_ ?ob ?underob))))
     (:derived (derivable_unstack) (exists (?underob ?ob) (and (on ?ob ?underob) (clear ?ob) (arm_empty) (unstack_ ?ob ?underob))))
     (:derived (holding_AG ?x) (and (holding ?x) (holding_G ?x)))
     (:derived (holding_UG ?x) (and (not (holding ?x)) (holding_G ?x)))
     (:derived (on_AG ?x ?y) (and (on ?x ?y) (on_G ?x ?y)))
     (:derived (on_UG ?x ?y) (and (not (on ?x ?y)) (on_G ?x ?y)))
     (:derived (on_table_AG ?x) (and (on_table ?x) (on_table_G ?x)))
     (:derived (on_table_UG ?x) (and (not (on_table ?x)) (on_table_G ?x)))
     (:derived (pickup_ ?A) (exists (?B) (and (on_UG ?A ?B) (well_placed ?B) (clear ?B))))
     (:derived (putdown_ ?A) (exists (?B ?C) (and (on_UG ?A ?B) (on ?C ?B))))
     (:derived (putdown_ ?A) (exists (?B) (and (on_UG ?A ?B) (not (well_placed ?B)))))
     (:derived (putdown_ ?A) (on_table_UG ?A))
     (:derived (stack_ ?A ?B) (and (on_UG ?A ?B) (well_placed ?B)))
     (:derived (unstack_ ?A ?B) (not (well_placed ?A)))
     (:derived (well_placed ?A) (exists (?B) (and (on_AG ?A ?B) (well_placed ?B))))
     (:derived (well_placed ?A) (on_table_AG ?A))
    (:action pickup
        :parameters (?ob)
        :precondition (and (clear ?ob) (on_table ?ob) (arm_empty) (pickup_ ?ob))
        :effect (and (holding ?ob) (not (clear ?ob)) (not (on_table ?ob)) (not (arm_empty)))
    )
     (:action putdown
        :parameters (?ob)
        :precondition (and (holding ?ob) (putdown_ ?ob))
        :effect (and (clear ?ob) (arm_empty) (on_table ?ob) (not (holding ?ob)))
    )
     (:action stack
        :parameters (?ob ?underob)
        :precondition (and (clear ?underob) (holding ?ob) (stack_ ?ob ?underob))
        :effect (and (arm_empty) (clear ?ob) (on ?ob ?underob) (not (clear ?underob)) (not (holding ?ob)))
    )
     (:action unstack
        :parameters (?ob ?underob)
        :precondition (and (on ?ob ?underob) (clear ?ob) (arm_empty) (unstack_ ?ob ?underob))
        :effect (and (holding ?ob) (clear ?underob) (not (on ?ob ?underob)) (not (clear ?ob)) (not (arm_empty)))
    )
)